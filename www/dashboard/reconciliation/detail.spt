import calendar
import datetime
from aspen import Response
from decimal import Decimal as D

[---]
if not user.ADMIN:
    raise Response(401 if user.ANON else 403)

by_day = website.db.all("""
        SELECT p.id as payday
             , date_trunc('day', timestamp)::date as day
             , network
             , sum(case when amount > 0 then amount + fee else 0 end) as charge_amount
             , sum(amount) as liability_delta
             , sum(fee) as fees
          FROM exchanges e, exchange_routes er, paydays p
         WHERE e.route = er.id
           AND date_trunc('day', ts_start)::date = date_trunc('day', timestamp)::date
      GROUP BY day, network, p.id
      ORDER BY day DESC;
""")

fmt = lambda x: "{:,.2f}".format(x)
[---] text/html
<html>
    <head>
        <title>Reconciliation Detail</title>
        <style>@import url("style.css");</style>
    </head>
    <body>
        <h1>Reconciliation Detail</h1>
        <table>
            <thead>
                <tr>
                    <th>Payday</th>
                    <th>Date</th>
                    <th>Network</th>
                    <th>Charge Amount ($)</th>
                    <th>Fee Income ($)</th>
                    <th>Liability &Delta; ($)</th>
                </tr>
            </thead>
            <tbody>
                {% for payday, day, network, charge_amount, liability_delta, fee in by_day %}
                <tr>
                    <td>{{ payday }}</td>
                    <td>{{ day }}</td>
                    <td>{{ network }}</td>
                    <td>{{ fmt(charge_amount) }}</td>
                    <td>{{ fmt(fee) }}</td>
                    <td>{{ fmt(liability_delta) }}</td>
                </tr>
                {% endfor %}
            </tbody>
        </table>
    </body>
</html>
